syntax = v1.0;

using "Omnius.Core.Cryptography";
using "Omnius.Core.Network";

namespace "Omnius.Xeus.Service";

enum TcpProxyType : uint8 {
    HttpProxy = 0,
    Socks5Proxy = 1,
}

table TcpProxyOptions {
    Type: TcpProxyType = 0,
    Address: OmniAddress = 1,
}

table TcpConnectOptions {
    Enabled: bool = 0,
    ProxyOptions: TcpProxyOptions? = 1,
}

table TcpAcceptOptions {
    Enabled: bool = 0,
    ListenAddresses: vector<OmniAddress>(capacity: 32) = 1,
    UseUpnp: bool = 2,
}

table TcpConnectorOptions {
    ConnectOptions: TcpConnectOptions = 0,
    AcceptOptions: TcpAcceptOptions = 1,
}

table ExplorerOptions {
    MaxConnectionCount: uint32 = 0,
    MaxBytesSendPerSecond: uint32 = 1,
    MaxBytesReceivePerSecond: uint32 = 2,
}

table NegotiatorOptions {
    MaxConnectionCount: uint32 = 0,
    MaxBytesSendPerSecond: uint32 = 1,
    MaxBytesReceivePerSecond: uint32 = 2,
}

enum EventReportType : uint8 {
    SpaceNotFound = 0,
}

table EventReport {
    CreationTime: timestamp = 0,
    Type: EventReportType = 1,
}

table ConsistencyReport {
    BadBlockCount: uint32 = 0,
    CheckedBlockCount: uint32 = 1,
    TotalBlockCount: uint32 = 2,
}

table PublishReport {
    RootHash: OmniHash = 0,
    PublishBlocks: vector<OmniHash>(capacity: 1073741824) = 1,
}

table WantReport {
    RootHash: OmniHash = 0,
    WantBlocks: vector<OmniHash>(capacity: 1073741824) = 1,
}

table NodeProfile {
    Addresses: vector<OmniAddress>(capacity: 32) = 0,
}
