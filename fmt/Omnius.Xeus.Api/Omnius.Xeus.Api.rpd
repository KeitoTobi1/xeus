syntax v1.0;

using "Omnius.Xeus.Components.Models";

namespace "Omnius.Xeus.Api";

[csharp_struct]
message GetMyNodeProfileResult {
    NodeProfile: NodeProfile,
}

[csharp_struct]
message AddCloudNodeProfilesParam {
    NodeProfiles: vector<NodeProfile>,
}

[csharp_struct]
message FindNodeProfilesParam {
    ResourceTag: ResourceTag,
}

[csharp_struct]
message FindNodeProfilesResult {
    NodeProfiles: vector<NodeProfile>,
}

[csharp_struct]
message RegisterPushContentParam {
    FilePath: string,
}

[csharp_struct]
message RegisterPushContentResult {
    Hash: OmniHash,
}

[csharp_struct]
message UnregisterPushContentParam {
    FilePath: string,
}

[csharp_struct]
message RegisterWantContentParam {
    Root: OmniHash,
}

[csharp_struct]
message UnregisterWantContent {
    Root: OmniHash,
}

[csharp_struct]
message UnregisterWantContent {
    Root: OmniHash,
}

service XeusService {
    GetMyNodeProfile: () -> (GetMyNodeProfileResult),
    AddCloudNodeProfiles: (AddCloudNodeProfilesParam) -> (),
    FindNodeProfiles: (FindNodeProfilesParam) -> (FindNodeProfilesResult),

    RegisterPushContent: (RegisterPushContentParam) -> (RegisterPushContentResult),
    UnregisterPushContent: (UnregisterPushContentParam) -> (),

    RegisterWantContent: (RegisterWantContentParam) -> (),
    UnregisterWantContent: (UnregisterWantContentParam) -> (),
    ExportContent: (OmniHash rootHash, string filePath, CancellationToken cancellationToken = default);
}
