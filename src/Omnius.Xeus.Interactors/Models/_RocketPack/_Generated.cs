// <auto-generated/>
#nullable enable

namespace Omnius.Xeus.Interactors.Models
{
    public enum XeusFileFoundResultState : sbyte
    {
        Found = 1,
        Downloading = 2,
        Downloaded = 4,
        Uploaded = 8,
    }
    public sealed partial class XeusUserProfile : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusUserProfile> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>.Formatter;
        public static global::Omnius.Xeus.Interactors.Models.XeusUserProfile Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>.Empty;

        static XeusUserProfile()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>.Empty = new global::Omnius.Xeus.Interactors.Models.XeusUserProfile(global::Omnius.Core.Cryptography.OmniSignature.Empty, global::Omnius.Core.RocketPack.Timestamp.Zero, global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public XeusUserProfile(global::Omnius.Core.Cryptography.OmniSignature signature, global::Omnius.Core.RocketPack.Timestamp creationTime, global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent content)
        {
            if (signature is null) throw new global::System.ArgumentNullException("signature");
            if (content is null) throw new global::System.ArgumentNullException("content");

            this.Signature = signature;
            this.CreationTime = creationTime;
            this.Content = content;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (signature != default) ___h.Add(signature.GetHashCode());
                if (creationTime != default) ___h.Add(creationTime.GetHashCode());
                if (content != default) ___h.Add(content.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }
        public global::Omnius.Core.RocketPack.Timestamp CreationTime { get; }
        public global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent Content { get; }

        public static global::Omnius.Xeus.Interactors.Models.XeusUserProfile Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Interactors.Models.XeusUserProfile? left, global::Omnius.Xeus.Interactors.Models.XeusUserProfile? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Interactors.Models.XeusUserProfile? left, global::Omnius.Xeus.Interactors.Models.XeusUserProfile? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Interactors.Models.XeusUserProfile) return false;
            return this.Equals((global::Omnius.Xeus.Interactors.Models.XeusUserProfile)other);
        }
        public bool Equals(global::Omnius.Xeus.Interactors.Models.XeusUserProfile? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Signature != target.Signature) return false;
            if (this.CreationTime != target.CreationTime) return false;
            if (this.Content != target.Content) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusUserProfile>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Interactors.Models.XeusUserProfile value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
                }
                if (value.CreationTime != global::Omnius.Core.RocketPack.Timestamp.Zero)
                {
                    w.Write((uint)2);
                    w.Write(value.CreationTime);
                }
                if (value.Content != global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent.Empty)
                {
                    w.Write((uint)3);
                    global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent.Formatter.Serialize(ref w, value.Content, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Interactors.Models.XeusUserProfile Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;
                global::Omnius.Core.RocketPack.Timestamp p_creationTime = global::Omnius.Core.RocketPack.Timestamp.Zero;
                global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent p_content = global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_creationTime = r.GetTimestamp();
                                break;
                            }
                        case 3:
                            {
                                p_content = global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Interactors.Models.XeusUserProfile(p_signature, p_creationTime, p_content);
            }
        }
    }
    public sealed partial class XeusUserProfileContent : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>.Formatter;
        public static global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>.Empty;

        static XeusUserProfileContent()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>.Empty = new global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent(global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>(), global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>(), global::System.Array.Empty<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>());
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxTrustedSignaturesCount = 32768;
        public static readonly int MaxBlockedSignaturesCount = 32768;
        public static readonly int MaxFileMetasCount = 33554432;

        public XeusUserProfileContent(global::Omnius.Core.Cryptography.OmniSignature[] trustedSignatures, global::Omnius.Core.Cryptography.OmniSignature[] blockedSignatures, global::Omnius.Xeus.Interactors.Models.XeusFileMeta[] fileMetas)
        {
            if (trustedSignatures is null) throw new global::System.ArgumentNullException("trustedSignatures");
            if (trustedSignatures.Length > 32768) throw new global::System.ArgumentOutOfRangeException("trustedSignatures");
            foreach (var n in trustedSignatures)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }
            if (blockedSignatures is null) throw new global::System.ArgumentNullException("blockedSignatures");
            if (blockedSignatures.Length > 32768) throw new global::System.ArgumentOutOfRangeException("blockedSignatures");
            foreach (var n in blockedSignatures)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }
            if (fileMetas is null) throw new global::System.ArgumentNullException("fileMetas");
            if (fileMetas.Length > 33554432) throw new global::System.ArgumentOutOfRangeException("fileMetas");
            foreach (var n in fileMetas)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }

            this.TrustedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(trustedSignatures);
            this.BlockedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(blockedSignatures);
            this.FileMetas = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>(fileMetas);

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                foreach (var n in trustedSignatures)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                foreach (var n in blockedSignatures)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                foreach (var n in fileMetas)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> TrustedSignatures { get; }
        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> BlockedSignatures { get; }
        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Xeus.Interactors.Models.XeusFileMeta> FileMetas { get; }

        public static global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent? left, global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent? left, global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent) return false;
            return this.Equals((global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent)other);
        }
        public bool Equals(global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.TrustedSignatures, target.TrustedSignatures)) return false;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.BlockedSignatures, target.BlockedSignatures)) return false;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.FileMetas, target.FileMetas)) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.TrustedSignatures.Count != 0)
                {
                    w.Write((uint)1);
                    w.Write((uint)value.TrustedSignatures.Count);
                    foreach (var n in value.TrustedSignatures)
                    {
                        global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                if (value.BlockedSignatures.Count != 0)
                {
                    w.Write((uint)2);
                    w.Write((uint)value.BlockedSignatures.Count);
                    foreach (var n in value.BlockedSignatures)
                    {
                        global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                if (value.FileMetas.Count != 0)
                {
                    w.Write((uint)3);
                    w.Write((uint)value.FileMetas.Count);
                    foreach (var n in value.FileMetas)
                    {
                        global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature[] p_trustedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();
                global::Omnius.Core.Cryptography.OmniSignature[] p_blockedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();
                global::Omnius.Xeus.Interactors.Models.XeusFileMeta[] p_fileMetas = global::System.Array.Empty<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>();

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                var length = r.GetUInt32();
                                p_trustedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                                for (int i = 0; i < p_trustedSignatures.Length; i++)
                                {
                                    p_trustedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                        case 2:
                            {
                                var length = r.GetUInt32();
                                p_blockedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                                for (int i = 0; i < p_blockedSignatures.Length; i++)
                                {
                                    p_blockedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                        case 3:
                            {
                                var length = r.GetUInt32();
                                p_fileMetas = new global::Omnius.Xeus.Interactors.Models.XeusFileMeta[length];
                                for (int i = 0; i < p_fileMetas.Length; i++)
                                {
                                    p_fileMetas[i] = global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Interactors.Models.XeusUserProfileContent(p_trustedSignatures, p_blockedSignatures, p_fileMetas);
            }
        }
    }
    public sealed partial class XeusFileMeta : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusFileMeta> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>.Formatter;
        public static global::Omnius.Xeus.Interactors.Models.XeusFileMeta Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>.Empty;

        static XeusFileMeta()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>.Empty = new global::Omnius.Xeus.Interactors.Models.XeusFileMeta(global::Omnius.Core.Cryptography.OmniHash.Empty, string.Empty, 0, global::System.Array.Empty<string>());
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxNameLength = 256;
        public static readonly int MaxTagsCount = 8;

        public XeusFileMeta(global::Omnius.Core.Cryptography.OmniHash contentHash, string name, ulong size, string[] tags)
        {
            if (name is null) throw new global::System.ArgumentNullException("name");
            if (name.Length > 256) throw new global::System.ArgumentOutOfRangeException("name");
            if (tags is null) throw new global::System.ArgumentNullException("tags");
            if (tags.Length > 8) throw new global::System.ArgumentOutOfRangeException("tags");
            foreach (var n in tags)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
                if (n.Length > 256) throw new global::System.ArgumentOutOfRangeException("n");
            }

            this.ContentHash = contentHash;
            this.Name = name;
            this.Size = size;
            this.Tags = new global::Omnius.Core.Collections.ReadOnlyListSlim<string>(tags);

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (contentHash != default) ___h.Add(contentHash.GetHashCode());
                if (name != default) ___h.Add(name.GetHashCode());
                if (size != default) ___h.Add(size.GetHashCode());
                foreach (var n in tags)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash ContentHash { get; }
        public string Name { get; }
        public ulong Size { get; }
        public global::Omnius.Core.Collections.ReadOnlyListSlim<string> Tags { get; }

        public static global::Omnius.Xeus.Interactors.Models.XeusFileMeta Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Interactors.Models.XeusFileMeta? left, global::Omnius.Xeus.Interactors.Models.XeusFileMeta? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Interactors.Models.XeusFileMeta? left, global::Omnius.Xeus.Interactors.Models.XeusFileMeta? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Interactors.Models.XeusFileMeta) return false;
            return this.Equals((global::Omnius.Xeus.Interactors.Models.XeusFileMeta)other);
        }
        public bool Equals(global::Omnius.Xeus.Interactors.Models.XeusFileMeta? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.ContentHash != target.ContentHash) return false;
            if (this.Name != target.Name) return false;
            if (this.Size != target.Size) return false;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.Tags, target.Tags)) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusFileMeta>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Interactors.Models.XeusFileMeta value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.ContentHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.ContentHash, rank + 1);
                }
                if (value.Name != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Name);
                }
                if (value.Size != 0)
                {
                    w.Write((uint)3);
                    w.Write(value.Size);
                }
                if (value.Tags.Count != 0)
                {
                    w.Write((uint)4);
                    w.Write((uint)value.Tags.Count);
                    foreach (var n in value.Tags)
                    {
                        w.Write(n);
                    }
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Interactors.Models.XeusFileMeta Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_contentHash = global::Omnius.Core.Cryptography.OmniHash.Empty;
                string p_name = string.Empty;
                ulong p_size = 0;
                string[] p_tags = global::System.Array.Empty<string>();

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_contentHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_name = r.GetString(256);
                                break;
                            }
                        case 3:
                            {
                                p_size = r.GetUInt64();
                                break;
                            }
                        case 4:
                            {
                                var length = r.GetUInt32();
                                p_tags = new string[length];
                                for (int i = 0; i < p_tags.Length; i++)
                                {
                                    p_tags[i] = r.GetString(256);
                                }
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Interactors.Models.XeusFileMeta(p_contentHash, p_name, p_size, p_tags);
            }
        }
    }
    public sealed partial class XeusFileFoundResult : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>.Formatter;
        public static global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>.Empty;

        static XeusFileFoundResult()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>.Empty = new global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult((global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState)0, global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public XeusFileFoundResult(global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState state, global::Omnius.Xeus.Interactors.Models.XeusFileMeta fileMeta)
        {
            if (fileMeta is null) throw new global::System.ArgumentNullException("fileMeta");

            this.State = state;
            this.FileMeta = fileMeta;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (state != default) ___h.Add(state.GetHashCode());
                if (fileMeta != default) ___h.Add(fileMeta.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState State { get; }
        public global::Omnius.Xeus.Interactors.Models.XeusFileMeta FileMeta { get; }

        public static global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult? left, global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult? left, global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult) return false;
            return this.Equals((global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult)other);
        }
        public bool Equals(global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.State != target.State) return false;
            if (this.FileMeta != target.FileMeta) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.State != (global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState)0)
                {
                    w.Write((uint)1);
                    w.Write((long)value.State);
                }
                if (value.FileMeta != global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Empty)
                {
                    w.Write((uint)2);
                    global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Formatter.Serialize(ref w, value.FileMeta, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState p_state = (global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState)0;
                global::Omnius.Xeus.Interactors.Models.XeusFileMeta p_fileMeta = global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_state = (global::Omnius.Xeus.Interactors.Models.XeusFileFoundResultState)r.GetInt64();
                                break;
                            }
                        case 2:
                            {
                                p_fileMeta = global::Omnius.Xeus.Interactors.Models.XeusFileMeta.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Interactors.Models.XeusFileFoundResult(p_state, p_fileMeta);
            }
        }
    }
}
