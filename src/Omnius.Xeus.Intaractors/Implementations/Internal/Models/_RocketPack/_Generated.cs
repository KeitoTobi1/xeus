// <auto-generated/>
#nullable enable

namespace Omnius.Xeus.Intaractors.Internal.Models
{
    internal sealed partial class UploadingFileItem : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>
    {
        public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>.Formatter;
        public static global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>.Empty;

        static UploadingFileItem()
        {
            global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>.Empty = new global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem(string.Empty, global::Omnius.Xeus.Intaractors.Models.Seed.Empty, global::Omnius.Core.RocketPack.Timestamp.Zero, (global::Omnius.Xeus.Intaractors.Models.UploadingFileState)0);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxFilePathLength = 8192;

        public UploadingFileItem(string filePath, global::Omnius.Xeus.Intaractors.Models.Seed seed, global::Omnius.Core.RocketPack.Timestamp creationTime, global::Omnius.Xeus.Intaractors.Models.UploadingFileState state)
        {
            if (filePath is null) throw new global::System.ArgumentNullException("filePath");
            if (filePath.Length > 8192) throw new global::System.ArgumentOutOfRangeException("filePath");
            if (seed is null) throw new global::System.ArgumentNullException("seed");
            this.FilePath = filePath;
            this.Seed = seed;
            this.CreationTime = creationTime;
            this.State = state;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (filePath != default) ___h.Add(filePath.GetHashCode());
                if (seed != default) ___h.Add(seed.GetHashCode());
                if (creationTime != default) ___h.Add(creationTime.GetHashCode());
                if (state != default) ___h.Add(state.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public string FilePath { get; }
        public global::Omnius.Xeus.Intaractors.Models.Seed Seed { get; }
        public global::Omnius.Core.RocketPack.Timestamp CreationTime { get; }
        public global::Omnius.Xeus.Intaractors.Models.UploadingFileState State { get; }

        public static global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem? left, global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem? left, global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem) return false;
            return this.Equals((global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem)other);
        }
        public bool Equals(global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.FilePath != target.FilePath) return false;
            if (this.Seed != target.Seed) return false;
            if (this.CreationTime != target.CreationTime) return false;
            if (this.State != target.State) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.FilePath != string.Empty)
                {
                    w.Write((uint)1);
                    w.Write(value.FilePath);
                }
                if (value.Seed != global::Omnius.Xeus.Intaractors.Models.Seed.Empty)
                {
                    w.Write((uint)2);
                    global::Omnius.Xeus.Intaractors.Models.Seed.Formatter.Serialize(ref w, value.Seed, rank + 1);
                }
                if (value.CreationTime != global::Omnius.Core.RocketPack.Timestamp.Zero)
                {
                    w.Write((uint)3);
                    w.Write(value.CreationTime);
                }
                if (value.State != (global::Omnius.Xeus.Intaractors.Models.UploadingFileState)0)
                {
                    w.Write((uint)4);
                    w.Write((ulong)value.State);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                string p_filePath = string.Empty;
                global::Omnius.Xeus.Intaractors.Models.Seed p_seed = global::Omnius.Xeus.Intaractors.Models.Seed.Empty;
                global::Omnius.Core.RocketPack.Timestamp p_creationTime = global::Omnius.Core.RocketPack.Timestamp.Zero;
                global::Omnius.Xeus.Intaractors.Models.UploadingFileState p_state = (global::Omnius.Xeus.Intaractors.Models.UploadingFileState)0;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_filePath = r.GetString(8192);
                                break;
                            }
                        case 2:
                            {
                                p_seed = global::Omnius.Xeus.Intaractors.Models.Seed.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 3:
                            {
                                p_creationTime = r.GetTimestamp();
                                break;
                            }
                        case 4:
                            {
                                p_state = (global::Omnius.Xeus.Intaractors.Models.UploadingFileState)r.GetUInt64();
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Intaractors.Internal.Models.UploadingFileItem(p_filePath, p_seed, p_creationTime, p_state);
            }
        }
    }
    internal sealed partial class DownloadingFileItem : global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>
    {
        public static global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem> Formatter => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>.Formatter;
        public static global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem Empty => global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>.Empty;

        static DownloadingFileItem()
        {
            global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketMessage<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>.Empty = new global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem(global::Omnius.Xeus.Intaractors.Models.Seed.Empty, null, global::Omnius.Core.RocketPack.Timestamp.Zero, (global::Omnius.Xeus.Intaractors.Models.DownloadingFileState)0);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxFilePathLength = 8192;

        public DownloadingFileItem(global::Omnius.Xeus.Intaractors.Models.Seed seed, string? filePath, global::Omnius.Core.RocketPack.Timestamp creationTime, global::Omnius.Xeus.Intaractors.Models.DownloadingFileState state)
        {
            if (seed is null) throw new global::System.ArgumentNullException("seed");
            if (filePath is not null && filePath.Length > 8192) throw new global::System.ArgumentOutOfRangeException("filePath");
            this.Seed = seed;
            this.FilePath = filePath;
            this.CreationTime = creationTime;
            this.State = state;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (seed != default) ___h.Add(seed.GetHashCode());
                if (filePath != default) ___h.Add(filePath.GetHashCode());
                if (creationTime != default) ___h.Add(creationTime.GetHashCode());
                if (state != default) ___h.Add(state.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Intaractors.Models.Seed Seed { get; }
        public string? FilePath { get; }
        public global::Omnius.Core.RocketPack.Timestamp CreationTime { get; }
        public global::Omnius.Xeus.Intaractors.Models.DownloadingFileState State { get; }

        public static global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketMessageReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketMessageWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem? left, global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem? left, global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem) return false;
            return this.Equals((global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem)other);
        }
        public bool Equals(global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Seed != target.Seed) return false;
            if (this.FilePath != target.FilePath) return false;
            if (this.CreationTime != target.CreationTime) return false;
            if (this.State != target.State) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketMessageFormatter<global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketMessageWriter w, in global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Seed != global::Omnius.Xeus.Intaractors.Models.Seed.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Intaractors.Models.Seed.Formatter.Serialize(ref w, value.Seed, rank + 1);
                }
                if (value.FilePath != null)
                {
                    w.Write((uint)2);
                    w.Write(value.FilePath);
                }
                if (value.CreationTime != global::Omnius.Core.RocketPack.Timestamp.Zero)
                {
                    w.Write((uint)3);
                    w.Write(value.CreationTime);
                }
                if (value.State != (global::Omnius.Xeus.Intaractors.Models.DownloadingFileState)0)
                {
                    w.Write((uint)4);
                    w.Write((ulong)value.State);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem Deserialize(ref global::Omnius.Core.RocketPack.RocketMessageReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Intaractors.Models.Seed p_seed = global::Omnius.Xeus.Intaractors.Models.Seed.Empty;
                string? p_filePath = null;
                global::Omnius.Core.RocketPack.Timestamp p_creationTime = global::Omnius.Core.RocketPack.Timestamp.Zero;
                global::Omnius.Xeus.Intaractors.Models.DownloadingFileState p_state = (global::Omnius.Xeus.Intaractors.Models.DownloadingFileState)0;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_seed = global::Omnius.Xeus.Intaractors.Models.Seed.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_filePath = r.GetString(8192);
                                break;
                            }
                        case 3:
                            {
                                p_creationTime = r.GetTimestamp();
                                break;
                            }
                        case 4:
                            {
                                p_state = (global::Omnius.Xeus.Intaractors.Models.DownloadingFileState)r.GetUInt64();
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Intaractors.Internal.Models.DownloadingFileItem(p_seed, p_filePath, p_creationTime, p_state);
            }
        }
    }
}
