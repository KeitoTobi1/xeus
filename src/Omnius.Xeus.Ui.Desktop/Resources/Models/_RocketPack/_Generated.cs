// <auto-generated/>
#nullable enable

namespace Omnius.Xeus.Ui.Desktop.Resources.Models
{
    public sealed partial class AppOptions : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>.Formatter;
        public static global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>.Empty;

        static AppOptions()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>.Empty = new global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions(global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>(), global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>(), 0);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxTrustedSignaturesCount = 32768;
        public static readonly int MaxBlockedSignaturesCount = 32768;

        public AppOptions(global::Omnius.Core.Cryptography.OmniSignature[] trustedSignatures, global::Omnius.Core.Cryptography.OmniSignature[] blockedSignatures, uint searchProfileDepth)
        {
            if (trustedSignatures is null) throw new global::System.ArgumentNullException("trustedSignatures");
            if (trustedSignatures.Length > 32768) throw new global::System.ArgumentOutOfRangeException("trustedSignatures");
            foreach (var n in trustedSignatures)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }
            if (blockedSignatures is null) throw new global::System.ArgumentNullException("blockedSignatures");
            if (blockedSignatures.Length > 32768) throw new global::System.ArgumentOutOfRangeException("blockedSignatures");
            foreach (var n in blockedSignatures)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }
            this.TrustedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(trustedSignatures);
            this.BlockedSignatures = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature>(blockedSignatures);
            this.SearchProfileDepth = searchProfileDepth;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                foreach (var n in trustedSignatures)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                foreach (var n in blockedSignatures)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                if (searchProfileDepth != default) ___h.Add(searchProfileDepth.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> TrustedSignatures { get; }
        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Core.Cryptography.OmniSignature> BlockedSignatures { get; }
        public uint SearchProfileDepth { get; }

        public static global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions? left, global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions? left, global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions) return false;
            return this.Equals((global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions)other);
        }
        public bool Equals(global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.TrustedSignatures, target.TrustedSignatures)) return false;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.BlockedSignatures, target.BlockedSignatures)) return false;
            if (this.SearchProfileDepth != target.SearchProfileDepth) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.TrustedSignatures.Count != 0)
                {
                    w.Write((uint)1);
                    w.Write((uint)value.TrustedSignatures.Count);
                    foreach (var n in value.TrustedSignatures)
                    {
                        global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                if (value.BlockedSignatures.Count != 0)
                {
                    w.Write((uint)2);
                    w.Write((uint)value.BlockedSignatures.Count);
                    foreach (var n in value.BlockedSignatures)
                    {
                        global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                if (value.SearchProfileDepth != 0)
                {
                    w.Write((uint)3);
                    w.Write(value.SearchProfileDepth);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature[] p_trustedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();
                global::Omnius.Core.Cryptography.OmniSignature[] p_blockedSignatures = global::System.Array.Empty<global::Omnius.Core.Cryptography.OmniSignature>();
                uint p_searchProfileDepth = 0;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                var length = r.GetUInt32();
                                p_trustedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                                for (int i = 0; i < p_trustedSignatures.Length; i++)
                                {
                                    p_trustedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                        case 2:
                            {
                                var length = r.GetUInt32();
                                p_blockedSignatures = new global::Omnius.Core.Cryptography.OmniSignature[length];
                                for (int i = 0; i < p_blockedSignatures.Length; i++)
                                {
                                    p_blockedSignatures[i] = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                        case 3:
                            {
                                p_searchProfileDepth = r.GetUInt32();
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Ui.Desktop.Resources.Models.AppOptions(p_trustedSignatures, p_blockedSignatures, p_searchProfileDepth);
            }
        }
    }
}
